version: 0.2

# Environment variables section for parameter store references
env:
  parameter-store:
    DOCKERHUB_USERNAME: "/codepipelinecsapp/dockerhub/username"
    DOCKERHUB_PASSWORD: "/codepipelinecsapp/dockerhub/password"

phases:
  pre_build:
    commands:
      # Login to Docker Hub using SSM parameters
      - echo Logging in to Docker Hub
      - echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
      
      # Prepare image tag with timestamp and commit hash
      - TAG=$(date +%Y%m%d%H%M%S)-$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)

  build:
    commands:
      # Build Docker image
      - echo Build started on `date`
      - docker build -t $DOCKERHUB_USERNAME/codepipelinecsapp:$TAG .
      
      # Optional: Run tests or validation
      # - docker run $DOCKERHUB_USERNAME/codepipelinecsapp:$TAG npm test

  post_build:
    commands:
      # Push image to Docker Hub
      - echo Build completed, pushing image
      - docker push $DOCKERHUB_USERNAME/codepipelinecsapp:$TAG
      
      # Create image definitions for ECS deployment
      - printf '[{"name":"ECSContDec32024","imageUri":"%s"}]' $DOCKERHUB_USERNAME/codepipelinecsapp:$TAG > imagedefinitions.json

      # Fetch the latest task definition
      - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition ECSTaskDefinitionDec32024 --query 'taskDefinition' --output json)

      # Update the image in the task definition
      - echo $TASK_DEFINITION | jq --arg IMAGE "$DOCKERHUB_USERNAME/codepipelinecsapp:$TAG" '.containerDefinitions[0].image = $IMAGE' > task-definition.json

# Artifacts to pass to next stage
artifacts:
  files:
    - appspec.yml
    # ECS task definition for deployment
    - imagedefinitions.json
    - task-definition.json
